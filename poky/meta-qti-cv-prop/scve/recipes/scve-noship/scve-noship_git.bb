inherit qcommon qlicense qprebuilt sdllvm
#inherit androidmk qlicense qprebuilt

DESCRIPTION = "Generate scve libraries"
LICENSE = "Qualcomm-Technologies-Inc.-Proprietary"
LIC_FILES_CHKSUM = "file://${COREBASE}/meta-qti-bsp-prop/files/qcom-licenses/\
Qualcomm-Technologies-Inc.-Proprietary;md5=92b1d0ceea78229551577d4284669bb8"

FILESPATH =+ "${WORKSPACE}/cv/:"
SRC_URI = "file://scve-noship/"

SRC_DIR  = "${WORKSPACE}/cv/scve-noship/"
S      = "${WORKDIR}/scve-noship"

DEPENDS += "fastcv-noship mm-camera"
DEPENDS += "jpeg"
DEPENDS += "adsprpc liblog glib-2.0"

EXTRA_OEMAKE += " DEF_SCVE_PATH=${S}"
EXTRA_OEMAKE += " DEF_FCV_PATH=${WORKSPACE}/cv/fastcv-noship"
EXTRA_OECONF += " --with-glib"
EXTRA_OECONF += " --enable-target-${BASEMACHINE}=yes"
EXTRA_OECONF += " --with-cutils-headers=${STAGING_INCDIR}/cutils/"
EXTRA_OECONF += " --with-sanitized-headers=${STAGING_KERNEL_BUILDDIR}/usr/include/"
EXTRA_OECONF += "${@base_contains('DISTRO_FEATURES','face-recognition','--with-facereco=yes','--with-facereco=no', d)}"
ENABLE_SDLLVM = "true"

CPPFLAGS += " -I${STAGING_INCDIR}"
CPPFLAGS += " -I${STAGING_INCDIR}/cutils"
CPPFLAGS += " -I${STAGING_INCDIR}/glib-2.0"
CPPFLAGS += " -I${STAGING_LIBDIR}/glib-2.0/include"
CXXFLAGS += "-I${STAGING_INCDIR}/c++/4.9.3/"
CXXFLAGS += "-I${STAGING_INCDIR}/c++/4.9.3/${TARGET_SYS}"
CPPFLAGS += "-I${WORKSPACE}/camera/services/mm-camera/mm-camera2/media-controller/modules/imglib/components/lib/faceproc"

#last 2 lines included
CPPFLAGS += " -include unistd.h"
CPPFLAGS += " -include sys/time.h"
CPPFLAGS += " -Wno-error"
CFLAGS += "-include stdint.h"
CPPFLAGS += "-Dstrlcpy=g_strlcpy"
CPPFLAGS += "-DLINUX"
CPPFLAGS += "-Dstrlcat=g_strlcat"
CPPFLAGS += "-include stdlib.h"
CPPFLAGS += "-include glib.h"
CPPFLAGS += "-include glibconfig.h"
CPPFLAGS += "-include properties.h"
CPPFLAGS += "-include ctype.h"
CPPFLAGS += "-include setjmp.h"
CPPFLAGS += "-include float.h"

CXXFLAGS += " -std=c++11 -std=gnu++0x -std=c++0x -std=gnu++11"

TARGET_LDFLAGS = ""
LDFLAGS += " -L${STAGING_BASELIBDIR} -L${STAGING_LIBDIR} -L${STAGING_DIR_TARGET}"
LDFLAGS += " -lcutils"
LDFLAGS += " -lglib-2.0"
LDFLAGS += " -llog"
LDFLAGS += " -lmmcamera_faceproc"
LDFLAGS += " -ladsprpc"

do_install_append(){
    install -d ${D}/usr/lib/rfsa
    install -d ${D}/usr/lib/rfsa/adsp
        if [ "${BASEMACHINE}" == "apq8053" ] ; then
    install -m 0644 ${S}/MotionTracker/LL/lib/dsp/v5/libscveMotionTracker_skel.so ${D}/usr/lib/rfsa/adsp
        fi
        if [ "${BASEMACHINE}" == "apq8096" ] ; then
    install -m 0644 ${S}/ObjectTracker/LL/lib/dsp/v60/libscveT2T_skel.so ${D}/usr/lib/rfsa/adsp
        install -m 0644 ${S}/ObjectSegmentation/LL/lib/dsp/v60/libscveObjectSegmentation_skel.so ${D}/usr/lib/rfsa/adsp
        fi
}

PACKAGES = "${PN}"
INSANE_SKIP_${PN} = "arch"
INSANE_SKIP_${PN} += "dev-deps"
INSANE_SKIP_${PN} += "dev-so"
INSANE_SKIP_${PN} += "already-stripped"

SOLIBS = ".so"
FILES_SOLIBSDEV = ""

FILES_${PN} += "/usr/lib/* /usr/bin/* /usr/etc/* $(libdir)/*"

#! /bin/sh

# Copyright (c) 2017, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#   * Neither the name of The Linux Foundation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

UNBRICK_KEY="anki.unbrick"
WIPE_COOKIE="/run/wipe-data"
TOM_LOG="/factory/log1"
CONNMAN_DONE_TOKEN=/data/lib/connman/.mount-data
ROBOT_KEY=/data/etc/robot.pem


make_userdata() {
  if $1; then
    echo "Remaking /data" > /dev/kmsg
    mkfs.ext4 /dev/block/bootdevice/by-name/userdata
    mount /data
  fi
  # This doesn't really seem to belong in this script but the usb service is using this directory's existance to
  # determine that /data is mounted and it isn't well integrated into systemd so making it here is the easiest way
  # to make it work.
  mkdir -p /data/usb
  mkdir -p /data/misc/camera
  if [ ! -e $CONNMAN_DONE_TOKEN ]; then
    mkdir -p /data/lib/connman/
    cp -rf /var/lib/connman/* /data/lib/connman
    touch $CONNMAN_DONE_TOKEN
  fi
  if [ ! -f $ROBOT_KEY ]; then
    mkdir -p /data/etc
    openssl genrsa -out $ROBOT_KEY 2048
    chmod 440 $ROBOT_KEY
  fi
}


case "$1" in
  start )
    if grep $UNBRICK_KEY /proc/cmdline > /dev/null; then
      echo "Mount-data in UNBRICK MODE" > /dev/kmsg
      mount -o size=64M -t tmpfs none /data/
      make_userdata false
    else
      if ! mount /data; then
        make_userdata true
        sync
      fi
      mkdir -p /data/misc/bluetooth
      chown -R bluetooth:bluetooth /data/misc/bluetooth
      chmod -R 770 /data/misc/bluetooth
    fi
    ;;

  stop )
    echo "Unmounting /data"
    sync
    umount /data
    if test -e $WIPE_COOKIE; then
      blkdiscard -s /dev/block/bootdevice/by-name/userdata
      blkdiscard -s /dev/block/bootdevice/by-name/switchboard
    fi
    ;;

  * )
    echo "Usage: mount-data { start | stop }"
    ;;
esac

exit 0

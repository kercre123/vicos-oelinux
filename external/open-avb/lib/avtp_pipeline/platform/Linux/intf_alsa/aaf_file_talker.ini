#####################################################################
# General Talker configuration
#####################################################################
# role: Sets the process as a talker or listener. Valid values are
# talker or listener
role = talker

# stream_addr: Used on the listener and should be set to the 
# mac address of the talker.
#stream_addr = 00:25:64:48:ca:a8

# stream_uid: The unique stream ID. The talker and listener must
# both have this set the same.
stream_uid = 2

# dest_addr: destination multicast address for the stream.
#
# If using SRP and MAAP, dynamic destination addresses are generated 
# automatically by the talker and passed to the listner, and don't
# need to be configured.
#
# Without MAAP, locally administered (static) addresses must be
# configured.  Thouse addresses are in the range of:
#     91:E0:F0:00:FE:00 - 91:E0:F0:00:FE:FF.
# Typically use :00 for the first stream, :01 for the second, etc.
#
# When SRP is being used the static destination address only needs to
# be set in the talker.  If SRP is not being used the destination address
# needs to be set (to the same value) in both the talker and listener.
#
# The destination is a multicast address, not a real MAC address, so it
# does not match the talker or listener's interface MAC.  There are 
# several pools of those addresses for use by AVTP defined in 1722.
#
#dest_addr = 91:e0:f0:00:fe:00

# max_interval_frames: The maximum number of packets that will be sent during 
# an observation interval. This is only used on the talker.
max_interval_frames = 1

# sr_class: A talker only setting. Values are either A or B. If not set an internal 
# default is used.
sr_class = B

# sr_rank: A talker only setting. If not set an internal default is used.
#sr_rank = 1

# max_transit_usec: Allows manually specifying a maximum transit time. 
# On the talker this value is added to the PTP walltime to create the AVTP Timestamp.
# On the listener this value is used to validate an expected valid timestamp range.
# Note: For the listener the map_nv_item_count value must be set large enough to 
# allow buffering at least as many AVTP packets that can be transmitted  during this 
# max transit time.
max_transit_usec = 50000

# internal_latency: Allows mannually specifying an internal latency time. This is used
# only on the talker.
#internal_latency = 0

# max_stale: The number of microseconds beyond the presentation time that media queue items will be purged 
# because they are too old (past the presentation time). This is only used on listener end stations.
# Note: needing to purge old media queue items is often a sign of some other problem. For example: a delay at 
# stream startup before incoming packets are ready to be processed by the media sink. If this deficit 
# in processing or purging the old (stale) packets is not handled, syncing multiple listeners will be problematic.
#max_stale = 1000

# raw_tx_buffers: The number of raw socket transmit buffers. Typically 4 - 8 are good values.
# This is only used by the talker. If not set internal defaults are used.
#raw_tx_buffers = 1000

# report_seconds: How often to output stats. Defaults to 10 seconds. 0 turns off the stats. 
#report_seconds = 0

# Ethernet Interface Name. Only needed on some platforms when stack is built with no endpoint functionality
# ifname = eth0

# vlan_id: VLAN Identifier (1-4094). Used in "no endpoint" builds. Defaults to 2.
# vlan_id = 2

#####################################################################
# Mapping module configuration
#####################################################################
# map_lib: The name of the library file (commonly a .so file) that 
#  implements the Initialize function.  Comment out the map_lib name
#  and link in the .c file to the openavb_tl executable to embed the mapper
#  directly into the executable unit. There is no need to change anything
#  else. The Initialize function will still be dynamically linked in.
map_lib = libopenavb_map_aaf_audio.so

# map_fn: The name of the initialize function in the mapper.
map_fn = openavbMapAVTPAudioInitialize

# map_nv_item_count: The number of media queue elements to hold.
map_nv_item_count = 20

# map_nv_tx_rate: Transmit rate.
# This must be set for the AAF audio mapping module.
map_nv_tx_rate = 4000

# map_nv_packing_factor: Multiple of how many packets of audio frames to place in a media queue item.
map_nv_packing_factor = 32

# map_nv_sparse_mode: if set to 0 put presentation time in each packet.
# Set to 1 to use sparse mode - valid timestamp in every 8th packet.
# Default value used (0) when commented.
map_nv_sparse_mode = 0

#####################################################################
# Interface module configuration
#####################################################################
# intf_lib: The name of the library file (commonly a .so file) that 
#  implements the Initialize function.  Comment out the intf_lib name
#  and link in the .c file to the openavb_tl executable to embed the interface
#  directly into the executable unit. There is no need to change anything
#  else. The Initialize function will still be dynamically linked in.
# intf_fn: The name of the initialize function in the interface.
intf_lib = libopenavb_intf_wav_file.so

# intf_fn: The name of the initialize function in the interface.
intf_fn = openavbIntfWavFileInitialize

# intf_nv_file_name: The fully qualified file name.
intf_nv_file_name = test.wav

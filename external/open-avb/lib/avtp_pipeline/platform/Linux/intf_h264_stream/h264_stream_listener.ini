#####################################################################
# General Listener configuration
#####################################################################
# role: Sets the process as a talker or listener. Valid values are
# talker or listener
role = listener

# stream_addr: Used on the listener and should be set to the
# mac address of the talker.
#stream_addr = 00:80:E1:FF:FF:07
stream_addr = E8:E0:B7:B5:7D:F8

# stream_uid: The unique stream ID. The talker and listener must
# both have this set the same.
stream_uid = 1

# dest_addr: see description in talker.ini
dest_addr = 91:e0:f0:00:fe:00

# max_interval_frames: The maximum number of packets that will be sent during
# an observation interval. This is only used on the talker.
#max_interval_frames = 1

# sr_class: A talker only setting. Values are either A or B. If not set an internal
# default is used.
sr_class = B

# sr_rank: A talker only setting. If not set an internal default is used.
#sr_rank = 1

# max_transit_usec: Allows manually specifying a maximum transit time.
# On the talker this value is added to the PTP walltime to create the AVTP Timestamp.
# On the listener this value is used to validate an expected valid timestamp range.
# Note: For the listener the map_nv_item_count value must be set large enough to
# allow buffering at least as many AVTP packets that can be transmitted  during this
# max transit time.
max_transit_usec = 50000

# internal_latency: Allows mannually specifying an internal latency time. This is used
# only on the talker.
#internal_latency = 0

# max_stale: The number of microseconds beyond the presentation time that media queue items will be purged
# because they are too old (past the presentation time). This is only used on listener end stations.
# Note: needing to purge old media queue items is often a sign of some other problem. For example: a delay at
# stream startup before incoming packets are ready to be processed by the media sink. If this deficit
# in processing or purging the old (stale) packets is not handled, syncing multiple listeners will be problematic.
#max_stale = 1000

# raw_rx_buffers: The number of raw socket receive buffers. Typically 50 - 100 are good values.
# This is only used by the listener. If not set internal defaults are used.
raw_rx_buffers = 100

# report_seconds: How often to output stats. Defaults to 10 seconds. 0 turns off the stats.
report_seconds = 1

#####################################################################
# Mapping module configuration
#####################################################################
# map_lib: The name of the library file (commonly a .so file) that
#  implements the Initialize function.  Comment out the map_lib name
#  and link in the .c file to the openavb_tl executable to embed the mapper
#  directly into the executable unit. There is no need to change anything
#  else. The Initialize function will still be dynamically linked in.
map_lib = libopenavb_map_h264.so

# map_fn: The name of the initialize function in the mapper.
map_fn = openavbMapH264Initialize

# map_nv_item_count: The number of media queue elements to hold.
map_nv_item_count = 200


#####################################################################
# Interface module configuration
#####################################################################
# intf_lib: The name of the library file (commonly a .so file) that
#  implements the Initialize function.  Comment out the intf_lib name
#  and link in the .c file to the openavb_tl executable to embed the interface
#  directly into the executable unit. There is no need to change anything
#  else. The Initialize function will still be dynamically linked in.
intf_lib = libopenavb_intf_h264_Stream.so

# intf_fn: The name of the initialize function in the interface.
intf_fn = openavbIntfH264StreamInitialize

# intf_nv_ignore_timestamp: If set the listener will ignore the timestamp on media queue items.
# intf_nv_ignore_timestamp = 1

intf_nv_width=1920
intf_nv_height=1080
intf_nv_frame_rate=30

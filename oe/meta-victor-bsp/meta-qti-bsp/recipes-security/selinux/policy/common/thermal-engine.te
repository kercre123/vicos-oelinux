# Copyright (c) 2016-17, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

policy_module(thermal-engine, 1.0)

########################################
#
# Declarations
#

type thermal-engine_t;
type thermal-engine_exec_t;

init_daemon_domain(thermal-engine_t, thermal-engine_exec_t)

# named socket type
type thermal_sock_t;
files_type(thermal_sock_t)

# configuration files
type thermal_etc_t;
files_type(thermal_etc_t)

# configuration files
type thermal_device_t;
dev_node(thermal_device_t)

allow thermal-engine_t self:capability sys_nice;
allow thermal-engine_t self:unix_dgram_socket create;
allow thermal-engine_t initrc_t:unix_dgram_socket sendto;
allow thermal-engine_t self:process setsched;
allow thermal-engine_t self:unix_dgram_socket { write connect };
allow thermal-engine_t initrc_t:unix_dgram_socket sendto;
allow thermal-engine_t self:capability2 block_suspend;
allow thermal-engine_t self:netlink_kobject_uevent_socket create_socket_perms;

dev_read_sysfs(thermal-engine_t)
rw_shared_memory_dev(thermal-engine_t)
rw_thermal_dev(thermal-engine_t)
read_thermal_config(thermal-engine_t)
manage_sock_files_pattern(thermal-engine_t, device_t, device_t)
dev_rw_null(thermal-engine_t)
read_proc_enrty(thermal-engine_t)
allow thermal-engine_t sysfs_t:file write;
open_proc_enrty(thermal-engine_t)
getattr_proc_entry(thermal-engine_t)

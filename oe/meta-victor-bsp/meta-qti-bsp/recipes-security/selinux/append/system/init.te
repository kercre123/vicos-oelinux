# Copyright (c) 2016-17, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Appended to modules/system/init.te in meta-selinux

allow init_t self:process execstack;
allow init_t self:process execmem;
dev_relabelto_irsc_util(kernel_t)
allow initrc_t self:system module_load;
allow init_t initrc_t:binder { transfer call };
allow init_t self:binder { transfer call set_context_mgr };
allow init_t self:capability2 { audit_read wake_alarm };
allow initrc_t power_unit_t:service { start status };
allow init_t self:system { status reboot halt start reload stop };
allow initrc_t self:capability2 wake_alarm;

systemd_start_power_units(init_t)
systemd_status_power_units(init_t)
init_stream_connect(sysadm_t)
init_get_generic_units_status(init_t)
binder_call_transfer(initrc_t)
reboot_recovery_start(init_t)
files_get_etc_unit_status(init_t)

allow init_t systemd_unit_t:service { start status stop reload };
allow init_t init_var_run_t:service { start status stop reload };

init_stop_generic_units(init_t)
init_reload_generic_units(init_t)

inherit androidmk qlicense qprebuilt

DESCRIPTION = "MM Camera libraries for MSM/QSD"
SECTION  = "camera"

FILESPATH =+ "${WORKSPACE}:"
SRC_URI   = "file://camera/services/mm-still-legacy"

SRCREV = "${AUTOREV}"
S      = "${WORKDIR}/camera/mm-still-legacy"

SRC_DIR = "${WORKSPACE}/camera/services/mm-still-legacy"

DEPENDS += "glib-2.0"
DEPENDS += "libxml2"
DEPENDS += "rb-mm-camera"
DEPENDS += "rb-camera"

EXTRA_OEMAKE += "SRC_CAMERA_HAL_DIR='${TMPDIR}'/work/'${MULTIMACH_TARGET_SYS}'/'${MLPREFIX}'rb-camera/'${EXTENDPE}${PV}-${PR}'/lib-legacy"
EXTRA_OEMAKE += "SRC_XML_INCLUDE='${STAGING_INCDIR}'/libxml2"
EXTRA_OEMAKE += "QC_PROP_ROOT='${WORKSPACE}'/camera/services"

CFLAGS += "-Wno-error -Wno-uninitialized -Wno-error=attributes -Wno-error=unused-parameter"
CFLAGS += "-Wno-error=builtin-macro-redefined -Wno-error=type-limits"
CFLAGS += "-D__unused="__attribute__((__unused__))""
CFLAGS += "-D_GNU_SOURCE"
CFLAGS += "-DUNIX_PATH_MAX=108"
CFLAGS += "-DIOT_PLATFORM"

CFLAGS += "-I${STAGING_INCDIR}/adreno/"
CFLAGS += "-I${STAGING_INCDIR}/glib-2.0"
CFLAGS += "-I${STAGING_LIBDIR}/glib-2.0/include"

CFLAGS += "-include linux/limits.h"
CFLAGS += "-include stddef.h"
CFLAGS += "-include stdint.h"
CFLAGS += "-Dstrlcpy=g_strlcpy"
CFLAGS += "-Dstrlcat=g_strlcat"
CFLAGS += "-include glib.h"
CFLAGS += "-include glibconfig.h"
CFLAGS += "-include sys/ioctl.h"
CFLAGS += "-include time.h"
CFLAGS += "-include sys/time.h"

LDFLAGS += "-lcutils"
LDFLAGS += "-lglib-2.0"
LDFLAGS += "-llog"
LDFLAGS += "-lrt"
LDFLAGS += "-lxml2"
LDFLAGS += "-lz"

do_fixup_before_compile () {
    # Replace all the $(LOCAL_PATH)/../../../hardware/qcom/camera
    find ${S}/ -type f -name "*.mk" -exec sed -i 's/\$.*\/hardware\/qcom\/camera/\$\(SRC_CAMERA_HAL_DIR\)/g' {} +

    # Replace all the hardware/qcom/camera
    find ${S}/ -type f -name "*.mk" -exec sed -i 's/hardware\/qcom\/camera/\$\(SRC_CAMERA_HAL_DIR\)/g' {} +

    # Remove extra .pc generated by do_patch
    rm -rf ${S}/.pc
}
addtask fixup_before_compile after do_patch before do_configure

export TARGET_LIBRARY_SUPPRESS_LIST="libcamera_client libhardware \
        libsync libui libcamera_metadata libqdMetaData libqservice \
        libbinder libgui libstlport libandroid libxml2 libz"

do_compile () {
    # Current support is limited to 32-bit build
    if [ "${MLPREFIX}" == "lib32-" ] || [ "${MLPREFIX}" == "" -a "${TUNE_ARCH}" == "arm" ]; then
        androidmk_setenv
        export USE_FASTCV_OPT=false
        export LIB_PROPRIETARY_DIR=/usr
        export OMX_HEADER_DIR='${TMPDIR}'/work/'${MULTIMACH_TARGET_SYS}'/'${MLPREFIX}'media/'${EXTENDPE}${PV}-${PR}'/hardware/qcom/media/mm-core/inc

        mkdir -p ${TMPDIR}/work-shared/apq8009/android_compat_build_artifacts/target/product/msm8909/obj/SHARED_LIBRARIES/libcrypto_intermediates
        touch ${TMPDIR}/work-shared/apq8009/android_compat_build_artifacts/target/product/msm8909/obj/SHARED_LIBRARIES/libcrypto_intermediates/export_includes
        mkdir -p ${TMPDIR}/work-shared/apq8009/android_compat_build_artifacts/target/product/msm8909/obj/SHARED_LIBRARIES/libfastcvopt_intermediates
        touch ${TMPDIR}/work-shared/apq8009/android_compat_build_artifacts/target/product/msm8909/obj/SHARED_LIBRARIES/libfastcvopt_intermediates/export_includes
        mkdir -p ${TMPDIR}/work-shared/apq8009/android_compat_build_artifacts/target/product/msm8909/obj/SHARED_LIBRARIES/libmmjpeg_intermediates
        touch ${TMPDIR}/work-shared/apq8009/android_compat_build_artifacts/target/product/msm8909/obj/SHARED_LIBRARIES/libmmjpeg_intermediates/export_includes

        oe_runmake -f ${LA_COMPAT_DIR}/build/core/main.mk BUILD_MODULES_IN_PATHS=${S} \
            all_modules SHOW_COMMANDS=true || die "make failed"
    else
        die "64-bit build not supported"
    fi
}

do_install () {
    androidmk_setenv

    export TARGET_OUT_HEADERS=${D}${includedir}
    export TARGET_OUT_VENDOR_SHARED_LIBRARIES=${D}${libdir}
    export TARGET_OUT_SHARED_LIBRARIES=${D}${libdir}
    export TARGET_OUT_EXECUTABLES=${D}/system/bin
    export TARGET_OUT_ETC=${D}/system/etc
    export TARGET_OUT=${D}/system
    export USE_FASTCV_OPT=false
    export OMX_HEADER_DIR='${TMPDIR}'/work/'${MULTIMACH_TARGET_SYS}'/'${MLPREFIX}'media/'${EXTENDPE}${PV}-${PR}'/hardware/qcom/media/mm-core/inc
    oe_runmake -f ${LA_COMPAT_DIR}/build/core/main.mk BUILD_MODULES_IN_PATHS=${S} \
        all_modules SHOW_COMMANDS=true USE_INSTALL=true || die "make failed"
}

PACKAGES = "${PN}"
FILES_${PN} += "/system/* \
               /usr/* "
